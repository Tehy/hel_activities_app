{"version":3,"sources":["services/api.js","services/user.js","components/NewUserForm.js","services/login.js","components/LoginForm.js","components/DisplaySingle.js","components/ButtonSaveRemove.js","services/db.js","components/PageTags.js","components/DisplayData.js","components/UserInfo.js","components/Header.js","components/Notification.js","App.js","index.js"],"names":["getData","a","axios","get","request","data","getDataId","id","baseUrl","getDataTag","tag","getDataRange","range","getSavedItems","items","response","newUserCreate","userCredentials","post","NewUserForm","setShowNewUserForm","setNotification","useState","username","setUsername","password","setPassword","createUser","e","preventDefault","status","message","includes","className","onSubmit","onChange","target","value","name","type","onClick","login","LoginForm","userSet","setShowLoginForm","handleLogin","DisplaySingle","htmlBody","backBtnOnclick","fi","info_url","href","rel","modified_at","substring","length","replace","location","address","street_address","locality","description","body","dangerouslySetInnerHTML","__html","where_when_duration","where_and_when","duration","images","map","i","url","key","src","width","alt","ButtonSaveRemove","activityId","user","saveBtnOnclick","removeBtnOnclick","btn","savedItems","saveItem","deleteItem","delete","PageTags","tags","updateTag","tagOnClick","t","DisplayData","state","updateState","updateUserWithItem","removeUserItem","prevRange","setPrevRange","searchedTag","setSearchedTag","allData","JSON","parse","meta","Object","entries","count","style","fontWeight","display","fontSize","next","parseInt","split","pop","previous","x","UserInfo","logout","updateData","Header","Notification","noteType","note","App","setData","setUser","showNewUserForm","showLoginForm","showNotification","setShowNotification","useEffect","setTimeout","localStorage","getItem","userObject","updateCookie","setItem","stringify","spliceItemFromArray","array","item","index","indexOf","splice","showLoginFormToggle","showNewUserFormToggle","userUnSet","removeItem","userFunctions","itemId","updtUser","push","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.132e714b.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"/api/data\";\r\n\r\nexport const getData = async () => {\r\n  //console.log(\"axios getting data\");\r\n  const request = await axios.get(baseUrl);\r\n  return request.data;\r\n};\r\nexport const getDataId = async (id) => {\r\n  //console.log(\"axios getDataId\", id);\r\n  const request = await axios.get(baseUrl + \"/id/\" + id);\r\n  return request.data;\r\n};\r\nexport const getDataTag = async (tag) => {\r\n  //console.log(\"axios getDataTag\", tag);\r\n  const request = await axios.get(baseUrl + \"/tag/\" + tag);\r\n  return request.data;\r\n};\r\n\r\nexport const getDataRange = async (range) => {\r\n  //console.log(\"axios getDataRange\", range);\r\n  const request = await axios.get(baseUrl + \"/limit/\" + range);\r\n  return request.data;\r\n};\r\n\r\nexport const getSavedItems = async (items) => {\r\n  //console.log(\"getSavedItems items\", items);\r\n  const response = await axios.get(baseUrl + \"/items/\" + items);\r\n  return response.data;\r\n};\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/user\";\r\n\r\nconst newUserCreate = async (userCredentials) => {\r\n  try {\r\n    //console.log(\"axios newUserCreate()\");\r\n    //console.log(\"axios userCredentials\", userCredentials);\r\n    const response = await axios.post(baseUrl, userCredentials);\r\n    //console.log(\"response\", response);\r\n    return response;\r\n  } catch (error) {\r\n    //console.log(\"services newUserCreate error\", error);\r\n    return error;\r\n  }\r\n};\r\nexport default newUserCreate;\r\n","import React, { useState } from \"react\";\r\nimport newUserCreate from \"../services/user\";\r\n\r\nconst NewUserForm = ({ setShowNewUserForm, setNotification }) => {\r\n  const [username, setUsername] = useState(\"demo-user\");\r\n  const [password, setPassword] = useState(\"demo-user\");\r\n  const createUser = async (e) => {\r\n    e.preventDefault();\r\n    if (username !== \"\" && password !== \"\") {\r\n      const response = await newUserCreate({ username, password });\r\n      /* console.log(\"response\", typeof response);\r\n      console.log(\"response\", response.message);\r\n      console.log(\"response\", response); */\r\n      if (response.status === 200) {\r\n        //console.log(\"response success\", response);\r\n        setNotification(\"user-created\");\r\n        setUsername(\"\");\r\n        setPassword(\"\");\r\n      } else if (response.message) {\r\n        //console.log(\"response.message\", response.message);\r\n        if (response.message.includes(\"401\")) setNotification(\"username-error\");\r\n      }\r\n    } else {\r\n      setNotification(\"empty\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"new-user-form\">\r\n      <form onSubmit={createUser}>\r\n        name\r\n        <input\r\n          onChange={(e) => {\r\n            setUsername(e.target.value);\r\n          }}\r\n          value={username}\r\n          name=\"name\"\r\n        />\r\n        <br />\r\n        password\r\n        <input\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n          value={password}\r\n          name=\"password\"\r\n        />\r\n        <br />\r\n        <button type=\"submit\">Create user</button>\r\n      </form>\r\n      <button\r\n        onClick={() => {\r\n          setShowNewUserForm(false);\r\n        }}\r\n      >\r\n        Cancel\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default NewUserForm;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/login\";\r\n\r\nconst login = async (userCredentials) => {\r\n  try {\r\n    //console.log(\"axios login() userCredentials\", userCredentials);\r\n    const response = await axios.post(baseUrl, userCredentials);\r\n    //console.log(\"axios login() response.data\", response.data);\r\n    //console.log(\"response.status\", response.status);\r\n\r\n    return response;\r\n  } catch (error) {\r\n    //console.log(\"typeof error\", typeof error);\r\n    //console.log(\"services login error\", { error });\r\n    return error.response;\r\n  }\r\n};\r\nexport default login;\r\n","import React, { useState } from \"react\";\r\nimport login from \"../services/login\";\r\n\r\nconst LoginForm = ({ userSet, setShowLoginForm, setNotification }) => {\r\n  const [username, setUsername] = useState(\"demo-user\");\r\n  const [password, setPassword] = useState(\"demo-user\");\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    if (username !== \"\" && password !== \"\") {\r\n      //const response = login({ username, password });\r\n      const response = await login({ username, password });\r\n      //console.log(\"response\", response);\r\n      if (response.status === 200) {\r\n        userSet(response.data);\r\n        //setPassword(\"\");\r\n        //setUsername(\"\");\r\n        setNotification(\"success\");\r\n      } else {\r\n        setNotification(\"error\");\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={handleLogin}>\r\n        name\r\n        <input\r\n          value={username}\r\n          onChange={(e) => {\r\n            setUsername(e.target.value);\r\n          }}\r\n        />\r\n        <br />\r\n        password\r\n        <input\r\n          value={password}\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n        />\r\n        <br />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <button\r\n        onClick={() => {\r\n          setShowLoginForm(false);\r\n        }}\r\n      >\r\n        Cancel\r\n      </button>\r\n    </>\r\n  );\r\n};\r\nexport default LoginForm;\r\n","import React from \"react\";\r\n\r\nexport default function DisplaySingle({ data, backBtnOnclick }) {\r\n  function createMarkup(htmlBody) {\r\n    return { __html: htmlBody };\r\n  }\r\n  return (\r\n    <div className=\"single-data\">\r\n      <button onClick={backBtnOnclick}>Go back</button>\r\n      <br />\r\n      {data.name.fi && (\r\n        <>\r\n          Tapahtuma: {data.name.fi} <br />\r\n        </>\r\n      )}\r\n      {data.info_url && (\r\n        <>\r\n          Linkki:{\" \"}\r\n          <a href={data.info_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {data.info_url}\r\n          </a>{\" \"}\r\n          <br />\r\n        </>\r\n      )}\r\n      {data.modified_at && (\r\n        <>\r\n          Muokattu:{\" \"}\r\n          {data.modified_at\r\n            .substring(0, data.modified_at.length - 5)\r\n            .replace(\"T\", \" \")}{\" \"}\r\n          <br />\r\n        </>\r\n      )}\r\n      {data.location && (\r\n        <>\r\n          Sijainti: {data.location.address.street_address},{\" \"}\r\n          {data.location.address.locality} <br />\r\n        </>\r\n      )}\r\n      {data.description.body && (\r\n        <>\r\n          Kuvaus:{\" \"}\r\n          <div dangerouslySetInnerHTML={createMarkup(data.description.body)} />{\" \"}\r\n        </>\r\n      )}\r\n      {data.where_when_duration && (\r\n        <>\r\n          Missä ja million: {data.where_when_duration.where_and_when}\r\n          <br />\r\n          Kesto: {data.where_when_duration.duration}\r\n          <br />\r\n        </>\r\n      )}\r\n\r\n      {data.description.images && (\r\n        <>\r\n          <p>Tapahtuma kuvia:</p>\r\n          <div className=\"images\">\r\n            {data.description.images.map((i) => (\r\n              <a\r\n                className=\"image\"\r\n                href={i.url}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                key={i.url}\r\n              >\r\n                <img src={i.url} width=\"200\" className=\"img\" alt=\"activity\" />\r\n              </a>\r\n            ))}{\" \"}\r\n            <br />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst ButtonSaveRemove = ({\r\n  activityId,\r\n  user,\r\n  saveBtnOnclick,\r\n  removeBtnOnclick,\r\n}) => {\r\n  const btn = user.savedItems.includes(activityId) ? (\r\n    <button\r\n      onClick={() => {\r\n        removeBtnOnclick(user, activityId);\r\n      }}\r\n    >\r\n      Remove\r\n    </button>\r\n  ) : (\r\n    <button\r\n      onClick={() => {\r\n        saveBtnOnclick(user, activityId);\r\n      }}\r\n    >\r\n      Save\r\n    </button>\r\n  );\r\n  return user.savedItems ? btn : <></>;\r\n};\r\nexport default ButtonSaveRemove;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/db\";\r\n\r\nexport const saveItem = async (id, username) => {\r\n  try {\r\n    const response = await axios.post(baseUrl, { id, username });\r\n    //console.log(\"saveItem response\", response);\r\n    return response.status;\r\n  } catch (error) {\r\n    //console.log(\"db saveItem error\", error);\r\n  }\r\n};\r\nexport const deleteItem = async (id, username) => {\r\n  try {\r\n    const response = axios.delete(baseUrl, { data: { id, username } });\r\n    //console.log(\"deleteItem response\", response);\r\n    return response.data;\r\n  } catch (error) {\r\n    //console.log(\"db deleteItem error\", error);\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nconst PageTags = ({ tags, updateTag, tagOnClick }) => {\r\n  return (\r\n    <>\r\n      <div className=\"tags\">\r\n        Page Tags:\r\n        <br />\r\n        {tags.map((t) => (\r\n          <div\r\n            key={t[0]}\r\n            className=\"tags-tag\"\r\n            onClick={async () => {\r\n              tagOnClick(t[0]);\r\n              updateTag(t[1]);\r\n            }}\r\n          >\r\n            {t[1]}\r\n            {\"        \"}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default PageTags;\r\n","import React, { useState } from \"react\";\r\nimport { getDataId, getDataRange, getDataTag, getData } from \"../services/api\";\r\nimport DisplaySingle from \"./DisplaySingle\";\r\nimport ButtonSaveRemove from \"./ButtonSaveRemove\";\r\nimport { saveItem, deleteItem } from \"../services/db\";\r\nimport PageTags from \"./PageTags\";\r\n\r\nconst DisplayData = ({\r\n  state,\r\n  updateState,\r\n  user,\r\n  updateUserWithItem,\r\n  removeUserItem,\r\n}) => {\r\n  const [prevRange, setPrevRange] = useState(\"limit=10&start=0\");\r\n  const [searchedTag, setSearchedTag] = useState();\r\n\r\n  const allData = JSON.parse(state);\r\n\r\n  const meta = allData.meta;\r\n  const data = allData.data;\r\n  const tags = Object.entries(allData.tags);\r\n\r\n  const backBtnOnclick = async () => {\r\n    updateState(await getDataRange(prevRange));\r\n  };\r\n  const tagOnClick = async (tag) => {\r\n    updateState(await getDataTag(tag));\r\n  };\r\n\r\n  const updateTag = async (tag) => {\r\n    setSearchedTag(tag);\r\n  };\r\n\r\n  const removeBtnOnclick = async (user, activityId) => {\r\n    await deleteItem(activityId, user.username);\r\n    //TODO check response status -> removeUserItem(user, activityId);\r\n    removeUserItem(user, activityId);\r\n  };\r\n  const saveBtnOnclick = async (user, activityId) => {\r\n    await saveItem(activityId, user.username);\r\n    //TODO check response status -> updateUserWithItem(user, activityId);\r\n    updateUserWithItem(user, activityId);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {meta && (\r\n        <div className=\"meta\">\r\n          {meta.count && (\r\n            <div className=\"count\">\r\n              {meta.count}{\" \"}\r\n              {searchedTag && (\r\n                <div\r\n                  style={{ fontWeight: \"bold\", display: \"inline\" }}\r\n                  className=\"tag\"\r\n                >\r\n                  {searchedTag}\r\n                </div>\r\n              )}{\" \"}\r\n              activities found\r\n              <br />\r\n              <div style={{ fontSize: \"small\" }}>\r\n                results{\" \"}\r\n                {meta.next\r\n                  ? parseInt(meta.next.split(\"=\").pop()) -\r\n                    10 +\r\n                    \" - \" +\r\n                    meta.next.split(\"=\").pop()\r\n                  : meta.count - (meta.count % 10) + \" - \" + meta.count}\r\n              </div>\r\n            </div>\r\n          )}\r\n          {meta.previous && (\r\n            <img\r\n              className=\"nav-buttons\"\r\n              alt=\"arrow left\"\r\n              src=\"arrow_left.png\"\r\n              onClick={async () => {\r\n                // TODO refactor\r\n                const range = meta.previous.split(\"?\").pop();\r\n                updateState(await getDataRange(range));\r\n                setPrevRange(\"limit=10&start=\" + range.split(\"=\").pop());\r\n              }}\r\n            />\r\n          )}\r\n          {meta.next && (\r\n            <img\r\n              className=\"nav-buttons\"\r\n              alt=\"arrow right\"\r\n              src=\"arrow_right.png\"\r\n              onClick={async () => {\r\n                // TODO refactor\r\n                const range = meta.next.split(\"?\").pop();\r\n                updateState(await getDataRange(range));\r\n                setPrevRange(\"limit=10&start=\" + range.split(\"=\").pop());\r\n              }}\r\n            />\r\n          )}\r\n          {/* show \"Go back\"-btn if no \"next&&previous\" data -> user has clicked to show \"Your activities\"*/}\r\n          {!meta.next && !meta.previous ? (\r\n            <button\r\n              onClick={async () => {\r\n                updateState(await getData());\r\n              }}\r\n            >\r\n              Go back\r\n            </button>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n      )}\r\n      {/* if data -> multiple -> data.map | else -> DisplaySingle */}\r\n      {data ? (\r\n        <>\r\n          <div className=\"data\">\r\n            {data.map((x) => (\r\n              <div className=\"data-item\" key={x.id}>\r\n                <span\r\n                  onClick={async () => {\r\n                    updateState(await getDataId(x.id));\r\n                  }}\r\n                >\r\n                  {x.name.fi}\r\n                </span>\r\n                <br />\r\n\r\n                {x.tags.map((t) => (\r\n                  <div className=\"data-item-tags\" key={t.id}>\r\n                    {t.name}{\" \"}\r\n                  </div>\r\n                ))}\r\n                {/* {x.id} */}\r\n\r\n                {user && (\r\n                  <ButtonSaveRemove\r\n                    activityId={x.id}\r\n                    user={user}\r\n                    saveBtnOnclick={saveBtnOnclick}\r\n                    removeBtnOnclick={removeBtnOnclick}\r\n                  />\r\n                )}\r\n                <br />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <PageTags tags={tags} updateTag={updateTag} tagOnClick={tagOnClick} />\r\n        </>\r\n      ) : (\r\n        <DisplaySingle data={allData} backBtnOnclick={backBtnOnclick} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default DisplayData;\r\n","import React from \"react\";\r\nimport { getSavedItems } from \"../services/api\";\r\n\r\nconst UserInfo = ({ logout, username, savedItems, updateData }) => {\r\n  return (\r\n    <div className=\"user-info\">\r\n      <p>\r\n        User <span style={{ fontWeight: \"bold\" }}>{username} </span>\r\n        logged in. You have\r\n        <span style={{ fontWeight: \"bold\" }}> {savedItems.length} </span>\r\n        activities <button onClick={logout}>Logout</button>{\" \"}\r\n        {savedItems.length > 0 ? (\r\n          <button\r\n            onClick={async () => {\r\n              //TODO setLoading(true)\r\n              updateData(await getSavedItems(savedItems));\r\n            }}\r\n          >\r\n            Your Activities\r\n          </button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </p>{\" \"}\r\n    </div>\r\n  );\r\n};\r\nexport default UserInfo;\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>My Helsinki Activities App</h1>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ type }) => {\r\n  let noteType;\r\n  let note;\r\n  if (type === \"error\") {\r\n    noteType = \"notification-error\";\r\n    note = \"wrong username or password\";\r\n  } else if (type === \"success\") {\r\n    noteType = \"notification-success\";\r\n    note = \"login success\";\r\n  } else if (type === \"empty\") {\r\n    noteType = \"notification-error\";\r\n    note = \"cannot have empty fields\";\r\n  } else if (type === \"username-error\") {\r\n    noteType = \"notification-error\";\r\n    note = \"username taken\";\r\n  } else if (type === \"user-created\") {\r\n    noteType = \"notification-success\";\r\n    note = \"user created\";\r\n  }\r\n  return <div className={noteType}>{note}</div>;\r\n};\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { getData } from \"./services/api\";\nimport NewUserForm from \"./components/NewUserForm\";\nimport LoginForm from \"./components/LoginForm\";\nimport DisplayData from \"./components/DisplayData\";\nimport UserInfo from \"./components/UserInfo\";\nimport Header from \"./components/Header\";\nimport Notification from \"./components/Notification\";\n\nfunction App() {\n  const [data, setData] = useState();\n  const [user, setUser] = useState();\n  const [showNewUserForm, setShowNewUserForm] = useState(false);\n  const [showLoginForm, setShowLoginForm] = useState(false);\n  const [showNotification, setShowNotification] = useState();\n  useEffect(() => {\n    setTimeout(() => {\n      setShowNotification();\n    }, 4000);\n  }, [showNotification]);\n  useEffect(() => {\n    (async () => {\n      setData(await getData());\n      if (localStorage.getItem(\"loggedInUser\")) {\n        //console.log(\"LOADING COOKIE\");\n        const userObject = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n        setUser(userObject);\n      }\n    })();\n  }, []);\n  const updateData = (x) => {\n    setData(x);\n  };\n  const updateCookie = (userObject) => {\n    localStorage.setItem(\"loggedInUser\", JSON.stringify(userObject));\n  };\n  const spliceItemFromArray = (array, item) => {\n    const index = array.indexOf(item);\n    const newArray = array.splice(index, 1);\n    //TODO check index>-1\n    return newArray;\n  };\n  const removeUserItem = (user, itemId) => {\n    //updates session data\n    const updtUser = {\n      savedItems: spliceItemFromArray(user.savedItems, itemId),\n      ...user,\n    };\n    setUser(updtUser);\n    updateCookie(updtUser);\n  };\n  const updateUserWithItem = (user, itemId) => {\n    //updates session data\n    const updtUser = { savedItems: user.savedItems.push(itemId), ...user };\n    setUser(updtUser);\n    updateCookie(updtUser);\n  };\n  const showLoginFormToggle = () => {\n    return showNewUserForm\n      ? (setShowLoginForm(true), setShowNewUserForm(false))\n      : setShowLoginForm(true);\n  };\n  const showNewUserFormToggle = () => {\n    return showLoginForm\n      ? (setShowLoginForm(false), setShowNewUserForm(true))\n      : setShowNewUserForm(true);\n  };\n  const userSet = (userObject) => {\n    // TODO refactor odd function\n    setUser(userObject);\n    updateCookie(userObject);\n    setShowNewUserForm(false);\n    setShowLoginForm(false);\n    (async () => {\n      setData(await getData());\n    })();\n  };\n  const userUnSet = () => {\n    setUser();\n    setData();\n    localStorage.removeItem(\"loggedInUser\");\n  };\n  const setNotification = (type) => {\n    setShowNotification(type);\n  };\n  const notification = (type) => {\n    return <Notification type={type} />;\n  };\n  const userFunctions = () => {\n    return user ? (\n      <UserInfo\n        username={user.username}\n        savedItems={user.savedItems}\n        logout={userUnSet}\n        updateData={updateData}\n      />\n    ) : (\n      <div className=\"user-forms\">\n        <button onClick={showLoginFormToggle}>Login</button>\n        <button onClick={showNewUserFormToggle}>Create User</button>\n        {showLoginForm && (\n          <LoginForm\n            setNotification={setNotification}\n            userSet={userSet}\n            setShowLoginForm={setShowLoginForm}\n          />\n        )}\n        {showNewUserForm && (\n          <NewUserForm\n            setNotification={setNotification}\n            setShowNewUserForm={setShowNewUserForm}\n          />\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <Header />\n      {showNotification && notification(showNotification)}\n      {!user ? (\n        userFunctions()\n      ) : data ? (\n        <>\n          {userFunctions()}\n          <div className=\"App\">\n            <DisplayData\n              user={user}\n              updateState={updateData}\n              state={data}\n              updateUserWithItem={updateUserWithItem}\n              removeUserItem={removeUserItem}\n            />\n          </div>\n        </>\n      ) : (\n        <h2>Loading...</h2>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}